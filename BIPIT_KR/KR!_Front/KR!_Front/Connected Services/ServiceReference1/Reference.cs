//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KR__Front.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierCode {
            get {
                return this.SupplierCodeField;
            }
            set {
                if ((this.SupplierCodeField.Equals(value) != true)) {
                    this.SupplierCodeField = value;
                    this.RaisePropertyChanged("SupplierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Waybill", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Waybill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime WaybillDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WaybillSumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierCode {
            get {
                return this.SupplierCodeField;
            }
            set {
                if ((this.SupplierCodeField.Equals(value) != true)) {
                    this.SupplierCodeField = value;
                    this.RaisePropertyChanged("SupplierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime WaybillDate {
            get {
                return this.WaybillDateField;
            }
            set {
                if ((this.WaybillDateField.Equals(value) != true)) {
                    this.WaybillDateField = value;
                    this.RaisePropertyChanged("WaybillDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WaybillSum {
            get {
                return this.WaybillSumField;
            }
            set {
                if ((this.WaybillSumField.Equals(value) != true)) {
                    this.WaybillSumField = value;
                    this.RaisePropertyChanged("WaybillSum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSuppliers", ReplyAction="http://tempuri.org/IService1/GetSuppliersResponse")]
        KR__Front.ServiceReference1.Supplier[] GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSuppliers", ReplyAction="http://tempuri.org/IService1/GetSuppliersResponse")]
        System.Threading.Tasks.Task<KR__Front.ServiceReference1.Supplier[]> GetSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWaybilles", ReplyAction="http://tempuri.org/IService1/GetWaybillesResponse")]
        KR__Front.ServiceReference1.Waybill[] GetWaybilles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetWaybilles", ReplyAction="http://tempuri.org/IService1/GetWaybillesResponse")]
        System.Threading.Tasks.Task<KR__Front.ServiceReference1.Waybill[]> GetWaybillesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertWaybill", ReplyAction="http://tempuri.org/IService1/InsertWaybillResponse")]
        void InsertWaybill(System.DateTime date, int sum, int supplier_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertWaybill", ReplyAction="http://tempuri.org/IService1/InsertWaybillResponse")]
        System.Threading.Tasks.Task InsertWaybillAsync(System.DateTime date, int sum, int supplier_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertSupplier", ReplyAction="http://tempuri.org/IService1/InsertSupplierResponse")]
        void InsertSupplier(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertSupplier", ReplyAction="http://tempuri.org/IService1/InsertSupplierResponse")]
        System.Threading.Tasks.Task InsertSupplierAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : KR__Front.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<KR__Front.ServiceReference1.IService1>, KR__Front.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KR__Front.ServiceReference1.Supplier[] GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<KR__Front.ServiceReference1.Supplier[]> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
        
        public KR__Front.ServiceReference1.Waybill[] GetWaybilles() {
            return base.Channel.GetWaybilles();
        }
        
        public System.Threading.Tasks.Task<KR__Front.ServiceReference1.Waybill[]> GetWaybillesAsync() {
            return base.Channel.GetWaybillesAsync();
        }
        
        public void InsertWaybill(System.DateTime date, int sum, int supplier_code) {
            base.Channel.InsertWaybill(date, sum, supplier_code);
        }
        
        public System.Threading.Tasks.Task InsertWaybillAsync(System.DateTime date, int sum, int supplier_code) {
            return base.Channel.InsertWaybillAsync(date, sum, supplier_code);
        }
        
        public void InsertSupplier(string name) {
            base.Channel.InsertSupplier(name);
        }
        
        public System.Threading.Tasks.Task InsertSupplierAsync(string name) {
            return base.Channel.InsertSupplierAsync(name);
        }
    }
}
